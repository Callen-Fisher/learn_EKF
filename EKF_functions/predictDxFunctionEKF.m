function predict_dx_equations = predictDxFunctionEKF(in1,in2,in3)
%PREDICTDXFUNCTIONEKF
%    PREDICT_DX_EQUATIONS = PREDICTDXFUNCTIONEKF(IN1,IN2,IN3)

%    This function was generated by the Symbolic Math Toolbox version 7.0.
%    27-Jul-2017 10:22:38

dth1 = in1(1,:);
dth2 = in1(2,:);
g = in3(7,:);
l1 = in3(1,:);
l2 = in3(2,:);
l1_com = in3(3,:);
l2_com = in3(4,:);
m1 = in3(5,:);
m2 = in3(6,:);
th1 = in2(1,:);
th2 = in2(2,:);
t3 = th1-th2;
t2 = cos(t3);
t4 = cos(th1);
t5 = sin(t3);
t6 = t2.^2;
t7 = l1_com.^2;
t8 = m1.*t7;
t9 = m2+t8-m2.*t6;
t10 = 1.0./t9;
t11 = cos(th2);
t12 = dth1.^2;
t13 = dth2.^2;
t14 = m2.^2;
predict_dx_equations = [-(t10.*(-g.*m1.*t4-g.*l1_com.*m1.*t4+g.*m1.*t2.*t11+l2.*l2_com.*m2.*t5.*t13+l1.*m2.*t2.*t5.*t12))./l1,(t10.*(g.*m1.*m2.*t11+l1.*t5.*t12.*t14+g.*m1.^2.*t7.*t11-g.*m1.*m2.*t2.*t4+l1.*m1.*m2.*t5.*t7.*t12+l2.*l2_com.*t2.*t5.*t13.*t14-g.*l1_com.*m1.*m2.*t2.*t4))./(l2.*l2_com.*m2),dth1,dth2];
